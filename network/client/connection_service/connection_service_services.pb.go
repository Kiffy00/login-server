// Code generated by protoc-gen-go-bnet. DO NOT EDIT.

package connection_service

import (
	rpc_types "bnet-mock/network/client/rpc_types"
)

import (
	"context"
	"strings"
)

// ConnectionServiceHash is the hash of the service name
const ConnectionServiceHash uint32 = 662833483 // bgs.protocol.connection.v1.ConnectionService
// ConnectionServiceOriginalFullyQualifiedDescriptorName is the original fully qualified descriptor name
const ConnectionServiceOriginalFullyQualifiedDescriptorName string = "bnet.protocol.connection.ConnectionService"

// ConnectionServiceOriginalFullyQualifiedDescriptorNameHash is the hash of the original fully qualified descriptor name
const ConnectionServiceOriginalFullyQualifiedDescriptorNameHash uint32 = 1698982289 // bnet.protocol.connection.ConnectionService

// ConnectionService is the client API for bgs.protocol.connection.v1.ConnectionService
type ConnectionService interface {
	// Connect has a method id of 1 and a method name of bgs.protocol.connection.v1.ConnectionService.Connect
	Connect(context.Context, *ConnectRequest, interface{}) error
	// Deprecated: Bind has a method id of 2 and a method name of bgs.protocol.connection.v1.ConnectionService.Bind
	Bind(context.Context, *BindRequest, interface{}) error
	// Echo has a method id of 3 and a method name of bgs.protocol.connection.v1.ConnectionService.Echo
	Echo(context.Context, *EchoRequest, interface{}) error
	// ForceDisconnect has a method id of 4 and a method name of bgs.protocol.connection.v1.ConnectionService.ForceDisconnect
	ForceDisconnect(context.Context, *DisconnectNotification, interface{}) error
	// KeepAlive has a method id of 5 and a method name of bgs.protocol.connection.v1.ConnectionService.KeepAlive
	KeepAlive(context.Context, *rpc_types.NoData, interface{}) error
	// Deprecated: Encrypt has a method id of 6 and a method name of bgs.protocol.connection.v1.ConnectionService.Encrypt
	Encrypt(context.Context, *EncryptRequest, interface{}) error
	// RequestDisconnect has a method id of 7 and a method name of bgs.protocol.connection.v1.ConnectionService.RequestDisconnect
	RequestDisconnect(context.Context, *DisconnectRequest, interface{}) error
}

// ConnectionServiceMethods is a map of method ids to method names
var ConnectionServiceMethods = map[uint32]string{
	1: "bgs.protocol.connection.v1.ConnectionService.Connect",
	2: "bgs.protocol.connection.v1.ConnectionService.Bind",
	3: "bgs.protocol.connection.v1.ConnectionService.Echo",
	4: "bgs.protocol.connection.v1.ConnectionService.ForceDisconnect",
	5: "bgs.protocol.connection.v1.ConnectionService.KeepAlive",
	6: "bgs.protocol.connection.v1.ConnectionService.Encrypt",
	7: "bgs.protocol.connection.v1.ConnectionService.RequestDisconnect",
}

// ConnectionServiceMethod is the method id for bgs.protocol.connection.v1.ConnectionService
type ConnectionServiceMethod uint32

// Enum value maps for ConnectionServiceMethod.
const (
	// ConnectionServiceMethod_Connect ConnectionServiceMethod = 1 // bgs.protocol.connection.v1.ConnectionService.Connect
	ConnectionServiceMethod_Connect ConnectionServiceMethod = 1 // bgs.protocol.connection.v1.ConnectionService.Connect
	// ConnectionServiceMethod_Bind ConnectionServiceMethod = 2 // bgs.protocol.connection.v1.ConnectionService.Bind
	ConnectionServiceMethod_Bind ConnectionServiceMethod = 2 // bgs.protocol.connection.v1.ConnectionService.Bind
	// ConnectionServiceMethod_Echo ConnectionServiceMethod = 3 // bgs.protocol.connection.v1.ConnectionService.Echo
	ConnectionServiceMethod_Echo ConnectionServiceMethod = 3 // bgs.protocol.connection.v1.ConnectionService.Echo
	// ConnectionServiceMethod_ForceDisconnect ConnectionServiceMethod = 4 // bgs.protocol.connection.v1.ConnectionService.ForceDisconnect
	ConnectionServiceMethod_ForceDisconnect ConnectionServiceMethod = 4 // bgs.protocol.connection.v1.ConnectionService.ForceDisconnect
	// ConnectionServiceMethod_KeepAlive ConnectionServiceMethod = 5 // bgs.protocol.connection.v1.ConnectionService.KeepAlive
	ConnectionServiceMethod_KeepAlive ConnectionServiceMethod = 5 // bgs.protocol.connection.v1.ConnectionService.KeepAlive
	// ConnectionServiceMethod_Encrypt ConnectionServiceMethod = 6 // bgs.protocol.connection.v1.ConnectionService.Encrypt
	ConnectionServiceMethod_Encrypt ConnectionServiceMethod = 6 // bgs.protocol.connection.v1.ConnectionService.Encrypt
	// ConnectionServiceMethod_RequestDisconnect ConnectionServiceMethod = 7 // bgs.protocol.connection.v1.ConnectionService.RequestDisconnect
	ConnectionServiceMethod_RequestDisconnect ConnectionServiceMethod = 7 // bgs.protocol.connection.v1.ConnectionService.RequestDisconnect
)

// ToUint32 converts a ConnectionServiceMethod enum to a uint32
func (m ConnectionServiceMethod) ToUint32() uint32 {
	return uint32(m)
}

// GetMethodFullName returns the method full name for the given method id
func (m ConnectionServiceMethod) GetMethodFullName() string {
	return ConnectionServiceMethods[uint32(m)]
}

// GetMethodName returns the method name for the given method id
func (m ConnectionServiceMethod) GetMethodName() string {
	if _, ok := ConnectionServiceMethods[uint32(m)]; !ok {
		return "No Method Exist"
	}
	return ConnectionServiceMethods[uint32(m)][strings.LastIndex(ConnectionServiceMethods[uint32(m)], ".")+1:]
}
