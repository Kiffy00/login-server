// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: authentication_service.proto

package authentication_service

import (
	account_types "bnet-mock/network/client/account_types"
	content_handle_types "bnet-mock/network/client/content_handle_types"
	entity_types "bnet-mock/network/client/entity_types"
	rpc_types "bnet-mock/network/client/rpc_types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModuleLoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleHandle *content_handle_types.ContentHandle `protobuf:"bytes,1,req,name=module_handle,json=moduleHandle" json:"module_handle,omitempty"`
	Message      []byte                              `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (x *ModuleLoadRequest) Reset() {
	*x = ModuleLoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleLoadRequest) ProtoMessage() {}

func (x *ModuleLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleLoadRequest.ProtoReflect.Descriptor instead.
func (*ModuleLoadRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{0}
}

func (x *ModuleLoadRequest) GetModuleHandle() *content_handle_types.ContentHandle {
	if x != nil {
		return x.ModuleHandle
	}
	return nil
}

func (x *ModuleLoadRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type ModuleNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId *int32  `protobuf:"varint,2,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	Result   *uint32 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (x *ModuleNotification) Reset() {
	*x = ModuleNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleNotification) ProtoMessage() {}

func (x *ModuleNotification) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleNotification.ProtoReflect.Descriptor instead.
func (*ModuleNotification) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{1}
}

func (x *ModuleNotification) GetModuleId() int32 {
	if x != nil && x.ModuleId != nil {
		return *x.ModuleId
	}
	return 0
}

func (x *ModuleNotification) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type ModuleMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId *int32 `protobuf:"varint,1,req,name=module_id,json=moduleId" json:"module_id,omitempty"`
	Message  []byte `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (x *ModuleMessageRequest) Reset() {
	*x = ModuleMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleMessageRequest) ProtoMessage() {}

func (x *ModuleMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleMessageRequest.ProtoReflect.Descriptor instead.
func (*ModuleMessageRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{2}
}

func (x *ModuleMessageRequest) GetModuleId() int32 {
	if x != nil && x.ModuleId != nil {
		return *x.ModuleId
	}
	return 0
}

func (x *ModuleMessageRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type LogonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program                      *string `protobuf:"bytes,1,opt,name=program" json:"program,omitempty"`
	Platform                     *string `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
	Locale                       *string `protobuf:"bytes,3,opt,name=locale" json:"locale,omitempty"`
	Email                        *string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Version                      *string `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	ApplicationVersion           *int32  `protobuf:"varint,6,opt,name=application_version,json=applicationVersion" json:"application_version,omitempty"`
	PublicComputer               *bool   `protobuf:"varint,7,opt,name=public_computer,json=publicComputer" json:"public_computer,omitempty"`
	SsoId                        []byte  `protobuf:"bytes,8,opt,name=sso_id,json=ssoId" json:"sso_id,omitempty"`
	DisconnectOnCookieFail       *bool   `protobuf:"varint,9,opt,name=disconnect_on_cookie_fail,json=disconnectOnCookieFail,def=0" json:"disconnect_on_cookie_fail,omitempty"`
	AllowLogonQueueNotifications *bool   `protobuf:"varint,10,opt,name=allow_logon_queue_notifications,json=allowLogonQueueNotifications,def=0" json:"allow_logon_queue_notifications,omitempty"`
	WebClientVerification        *bool   `protobuf:"varint,11,opt,name=web_client_verification,json=webClientVerification,def=0" json:"web_client_verification,omitempty"`
	CachedWebCredentials         []byte  `protobuf:"bytes,12,opt,name=cached_web_credentials,json=cachedWebCredentials" json:"cached_web_credentials,omitempty"`
	EnableCookie                 *bool   `protobuf:"varint,13,opt,name=enable_cookie,json=enableCookie,def=1" json:"enable_cookie,omitempty"`
	UserAgent                    *string `protobuf:"bytes,14,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
}

// Default values for LogonRequest fields.
const (
	Default_LogonRequest_DisconnectOnCookieFail       = bool(false)
	Default_LogonRequest_AllowLogonQueueNotifications = bool(false)
	Default_LogonRequest_WebClientVerification        = bool(false)
	Default_LogonRequest_EnableCookie                 = bool(true)
)

func (x *LogonRequest) Reset() {
	*x = LogonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogonRequest) ProtoMessage() {}

func (x *LogonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogonRequest.ProtoReflect.Descriptor instead.
func (*LogonRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{3}
}

func (x *LogonRequest) GetProgram() string {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return ""
}

func (x *LogonRequest) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *LogonRequest) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

func (x *LogonRequest) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *LogonRequest) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *LogonRequest) GetApplicationVersion() int32 {
	if x != nil && x.ApplicationVersion != nil {
		return *x.ApplicationVersion
	}
	return 0
}

func (x *LogonRequest) GetPublicComputer() bool {
	if x != nil && x.PublicComputer != nil {
		return *x.PublicComputer
	}
	return false
}

func (x *LogonRequest) GetSsoId() []byte {
	if x != nil {
		return x.SsoId
	}
	return nil
}

func (x *LogonRequest) GetDisconnectOnCookieFail() bool {
	if x != nil && x.DisconnectOnCookieFail != nil {
		return *x.DisconnectOnCookieFail
	}
	return Default_LogonRequest_DisconnectOnCookieFail
}

func (x *LogonRequest) GetAllowLogonQueueNotifications() bool {
	if x != nil && x.AllowLogonQueueNotifications != nil {
		return *x.AllowLogonQueueNotifications
	}
	return Default_LogonRequest_AllowLogonQueueNotifications
}

func (x *LogonRequest) GetWebClientVerification() bool {
	if x != nil && x.WebClientVerification != nil {
		return *x.WebClientVerification
	}
	return Default_LogonRequest_WebClientVerification
}

func (x *LogonRequest) GetCachedWebCredentials() []byte {
	if x != nil {
		return x.CachedWebCredentials
	}
	return nil
}

func (x *LogonRequest) GetEnableCookie() bool {
	if x != nil && x.EnableCookie != nil {
		return *x.EnableCookie
	}
	return Default_LogonRequest_EnableCookie
}

func (x *LogonRequest) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

type LogonResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode       *uint32                  `protobuf:"varint,1,req,name=error_code,json=errorCode" json:"error_code,omitempty"`
	AccountId       *entity_types.EntityId   `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	GameAccountId   []*entity_types.EntityId `protobuf:"bytes,3,rep,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	Email           *string                  `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	AvailableRegion []uint32                 `protobuf:"varint,5,rep,name=available_region,json=availableRegion" json:"available_region,omitempty"`
	ConnectedRegion *uint32                  `protobuf:"varint,6,opt,name=connected_region,json=connectedRegion" json:"connected_region,omitempty"`
	BattleTag       *string                  `protobuf:"bytes,7,opt,name=battle_tag,json=battleTag" json:"battle_tag,omitempty"`
	GeoipCountry    *string                  `protobuf:"bytes,8,opt,name=geoip_country,json=geoipCountry" json:"geoip_country,omitempty"`
	SessionKey      []byte                   `protobuf:"bytes,9,opt,name=session_key,json=sessionKey" json:"session_key,omitempty"`
	RestrictedMode  *bool                    `protobuf:"varint,10,opt,name=restricted_mode,json=restrictedMode" json:"restricted_mode,omitempty"`
}

func (x *LogonResult) Reset() {
	*x = LogonResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogonResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogonResult) ProtoMessage() {}

func (x *LogonResult) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogonResult.ProtoReflect.Descriptor instead.
func (*LogonResult) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{4}
}

func (x *LogonResult) GetErrorCode() uint32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *LogonResult) GetAccountId() *entity_types.EntityId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *LogonResult) GetGameAccountId() []*entity_types.EntityId {
	if x != nil {
		return x.GameAccountId
	}
	return nil
}

func (x *LogonResult) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *LogonResult) GetAvailableRegion() []uint32 {
	if x != nil {
		return x.AvailableRegion
	}
	return nil
}

func (x *LogonResult) GetConnectedRegion() uint32 {
	if x != nil && x.ConnectedRegion != nil {
		return *x.ConnectedRegion
	}
	return 0
}

func (x *LogonResult) GetBattleTag() string {
	if x != nil && x.BattleTag != nil {
		return *x.BattleTag
	}
	return ""
}

func (x *LogonResult) GetGeoipCountry() string {
	if x != nil && x.GeoipCountry != nil {
		return *x.GeoipCountry
	}
	return ""
}

func (x *LogonResult) GetSessionKey() []byte {
	if x != nil {
		return x.SessionKey
	}
	return nil
}

func (x *LogonResult) GetRestrictedMode() bool {
	if x != nil && x.RestrictedMode != nil {
		return *x.RestrictedMode
	}
	return false
}

type GenerateSSOTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program *uint32 `protobuf:"fixed32,1,opt,name=program" json:"program,omitempty"`
}

func (x *GenerateSSOTokenRequest) Reset() {
	*x = GenerateSSOTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateSSOTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSSOTokenRequest) ProtoMessage() {}

func (x *GenerateSSOTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSSOTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateSSOTokenRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateSSOTokenRequest) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

type GenerateSSOTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoId     []byte `protobuf:"bytes,1,opt,name=sso_id,json=ssoId" json:"sso_id,omitempty"`
	SsoSecret []byte `protobuf:"bytes,2,opt,name=sso_secret,json=ssoSecret" json:"sso_secret,omitempty"`
}

func (x *GenerateSSOTokenResponse) Reset() {
	*x = GenerateSSOTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateSSOTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSSOTokenResponse) ProtoMessage() {}

func (x *GenerateSSOTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSSOTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateSSOTokenResponse) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{6}
}

func (x *GenerateSSOTokenResponse) GetSsoId() []byte {
	if x != nil {
		return x.SsoId
	}
	return nil
}

func (x *GenerateSSOTokenResponse) GetSsoSecret() []byte {
	if x != nil {
		return x.SsoSecret
	}
	return nil
}

type LogonUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *uint32 `protobuf:"varint,1,req,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *LogonUpdateRequest) Reset() {
	*x = LogonUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogonUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogonUpdateRequest) ProtoMessage() {}

func (x *LogonUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogonUpdateRequest.ProtoReflect.Descriptor instead.
func (*LogonUpdateRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{7}
}

func (x *LogonUpdateRequest) GetErrorCode() uint32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type LogonQueueUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position          *uint32 `protobuf:"varint,1,req,name=position" json:"position,omitempty"`
	EstimatedTime     *uint64 `protobuf:"varint,2,req,name=estimated_time,json=estimatedTime" json:"estimated_time,omitempty"`
	EtaDeviationInSec *uint64 `protobuf:"varint,3,req,name=eta_deviation_in_sec,json=etaDeviationInSec" json:"eta_deviation_in_sec,omitempty"`
}

func (x *LogonQueueUpdateRequest) Reset() {
	*x = LogonQueueUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogonQueueUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogonQueueUpdateRequest) ProtoMessage() {}

func (x *LogonQueueUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogonQueueUpdateRequest.ProtoReflect.Descriptor instead.
func (*LogonQueueUpdateRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{8}
}

func (x *LogonQueueUpdateRequest) GetPosition() uint32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *LogonQueueUpdateRequest) GetEstimatedTime() uint64 {
	if x != nil && x.EstimatedTime != nil {
		return *x.EstimatedTime
	}
	return 0
}

func (x *LogonQueueUpdateRequest) GetEtaDeviationInSec() uint64 {
	if x != nil && x.EtaDeviationInSec != nil {
		return *x.EtaDeviationInSec
	}
	return 0
}

type AccountSettingsNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Licenses         []*account_types.AccountLicense `protobuf:"bytes,1,rep,name=licenses" json:"licenses,omitempty"`
	IsUsingRid       *bool                           `protobuf:"varint,2,opt,name=is_using_rid,json=isUsingRid" json:"is_using_rid,omitempty"`
	IsPlayingFromIgr *bool                           `protobuf:"varint,3,opt,name=is_playing_from_igr,json=isPlayingFromIgr" json:"is_playing_from_igr,omitempty"`
	CanReceiveVoice  *bool                           `protobuf:"varint,4,opt,name=can_receive_voice,json=canReceiveVoice" json:"can_receive_voice,omitempty"`
	CanSendVoice     *bool                           `protobuf:"varint,5,opt,name=can_send_voice,json=canSendVoice" json:"can_send_voice,omitempty"`
}

func (x *AccountSettingsNotification) Reset() {
	*x = AccountSettingsNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSettingsNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSettingsNotification) ProtoMessage() {}

func (x *AccountSettingsNotification) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSettingsNotification.ProtoReflect.Descriptor instead.
func (*AccountSettingsNotification) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{9}
}

func (x *AccountSettingsNotification) GetLicenses() []*account_types.AccountLicense {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *AccountSettingsNotification) GetIsUsingRid() bool {
	if x != nil && x.IsUsingRid != nil {
		return *x.IsUsingRid
	}
	return false
}

func (x *AccountSettingsNotification) GetIsPlayingFromIgr() bool {
	if x != nil && x.IsPlayingFromIgr != nil {
		return *x.IsPlayingFromIgr
	}
	return false
}

func (x *AccountSettingsNotification) GetCanReceiveVoice() bool {
	if x != nil && x.CanReceiveVoice != nil {
		return *x.CanReceiveVoice
	}
	return false
}

func (x *AccountSettingsNotification) GetCanSendVoice() bool {
	if x != nil && x.CanSendVoice != nil {
		return *x.CanSendVoice
	}
	return false
}

type ServerStateChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     *uint32 `protobuf:"varint,1,req,name=state" json:"state,omitempty"`
	EventTime *uint64 `protobuf:"varint,2,req,name=event_time,json=eventTime" json:"event_time,omitempty"`
}

func (x *ServerStateChangeRequest) Reset() {
	*x = ServerStateChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStateChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStateChangeRequest) ProtoMessage() {}

func (x *ServerStateChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStateChangeRequest.ProtoReflect.Descriptor instead.
func (*ServerStateChangeRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{10}
}

func (x *ServerStateChangeRequest) GetState() uint32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *ServerStateChangeRequest) GetEventTime() uint64 {
	if x != nil && x.EventTime != nil {
		return *x.EventTime
	}
	return 0
}

type VersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number     *uint32 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Patch      *string `protobuf:"bytes,2,opt,name=patch" json:"patch,omitempty"`
	IsOptional *bool   `protobuf:"varint,3,opt,name=is_optional,json=isOptional" json:"is_optional,omitempty"`
	KickTime   *uint64 `protobuf:"varint,4,opt,name=kick_time,json=kickTime" json:"kick_time,omitempty"`
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{11}
}

func (x *VersionInfo) GetNumber() uint32 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *VersionInfo) GetPatch() string {
	if x != nil && x.Patch != nil {
		return *x.Patch
	}
	return ""
}

func (x *VersionInfo) GetIsOptional() bool {
	if x != nil && x.IsOptional != nil {
		return *x.IsOptional
	}
	return false
}

func (x *VersionInfo) GetKickTime() uint64 {
	if x != nil && x.KickTime != nil {
		return *x.KickTime
	}
	return 0
}

type VersionInfoNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionInfo *VersionInfo `protobuf:"bytes,1,opt,name=version_info,json=versionInfo" json:"version_info,omitempty"`
}

func (x *VersionInfoNotification) Reset() {
	*x = VersionInfoNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInfoNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfoNotification) ProtoMessage() {}

func (x *VersionInfoNotification) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfoNotification.ProtoReflect.Descriptor instead.
func (*VersionInfoNotification) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{12}
}

func (x *VersionInfoNotification) GetVersionInfo() *VersionInfo {
	if x != nil {
		return x.VersionInfo
	}
	return nil
}

type MemModuleLoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *content_handle_types.ContentHandle `protobuf:"bytes,1,req,name=handle" json:"handle,omitempty"`
	Key    []byte                              `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Input  []byte                              `protobuf:"bytes,3,req,name=input" json:"input,omitempty"`
}

func (x *MemModuleLoadRequest) Reset() {
	*x = MemModuleLoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemModuleLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemModuleLoadRequest) ProtoMessage() {}

func (x *MemModuleLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemModuleLoadRequest.ProtoReflect.Descriptor instead.
func (*MemModuleLoadRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{13}
}

func (x *MemModuleLoadRequest) GetHandle() *content_handle_types.ContentHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *MemModuleLoadRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *MemModuleLoadRequest) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

type MemModuleLoadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,req,name=data" json:"data,omitempty"`
}

func (x *MemModuleLoadResponse) Reset() {
	*x = MemModuleLoadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemModuleLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemModuleLoadResponse) ProtoMessage() {}

func (x *MemModuleLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemModuleLoadResponse.ProtoReflect.Descriptor instead.
func (*MemModuleLoadResponse) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{14}
}

func (x *MemModuleLoadResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SelectGameAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameAccountId *entity_types.EntityId `protobuf:"bytes,1,req,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
}

func (x *SelectGameAccountRequest) Reset() {
	*x = SelectGameAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectGameAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectGameAccountRequest) ProtoMessage() {}

func (x *SelectGameAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectGameAccountRequest.ProtoReflect.Descriptor instead.
func (*SelectGameAccountRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{15}
}

func (x *SelectGameAccountRequest) GetGameAccountId() *entity_types.EntityId {
	if x != nil {
		return x.GameAccountId
	}
	return nil
}

type GameAccountSelectedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result        *uint32                `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	GameAccountId *entity_types.EntityId `protobuf:"bytes,2,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
}

func (x *GameAccountSelectedRequest) Reset() {
	*x = GameAccountSelectedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountSelectedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountSelectedRequest) ProtoMessage() {}

func (x *GameAccountSelectedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountSelectedRequest.ProtoReflect.Descriptor instead.
func (*GameAccountSelectedRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{16}
}

func (x *GameAccountSelectedRequest) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *GameAccountSelectedRequest) GetGameAccountId() *entity_types.EntityId {
	if x != nil {
		return x.GameAccountId
	}
	return nil
}

type GenerateWebCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program *uint32 `protobuf:"fixed32,1,opt,name=program" json:"program,omitempty"`
}

func (x *GenerateWebCredentialsRequest) Reset() {
	*x = GenerateWebCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateWebCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateWebCredentialsRequest) ProtoMessage() {}

func (x *GenerateWebCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateWebCredentialsRequest.ProtoReflect.Descriptor instead.
func (*GenerateWebCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{17}
}

func (x *GenerateWebCredentialsRequest) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

type GenerateWebCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebCredentials []byte `protobuf:"bytes,1,opt,name=web_credentials,json=webCredentials" json:"web_credentials,omitempty"`
}

func (x *GenerateWebCredentialsResponse) Reset() {
	*x = GenerateWebCredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateWebCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateWebCredentialsResponse) ProtoMessage() {}

func (x *GenerateWebCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateWebCredentialsResponse.ProtoReflect.Descriptor instead.
func (*GenerateWebCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{18}
}

func (x *GenerateWebCredentialsResponse) GetWebCredentials() []byte {
	if x != nil {
		return x.WebCredentials
	}
	return nil
}

type VerifyWebCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebCredentials []byte `protobuf:"bytes,1,opt,name=web_credentials,json=webCredentials" json:"web_credentials,omitempty"`
}

func (x *VerifyWebCredentialsRequest) Reset() {
	*x = VerifyWebCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authentication_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyWebCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyWebCredentialsRequest) ProtoMessage() {}

func (x *VerifyWebCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authentication_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyWebCredentialsRequest.ProtoReflect.Descriptor instead.
func (*VerifyWebCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_authentication_service_proto_rawDescGZIP(), []int{19}
}

func (x *VerifyWebCredentialsRequest) GetWebCredentials() []byte {
	if x != nil {
		return x.WebCredentials
	}
	return nil
}

var File_authentication_service_proto protoreflect.FileDescriptor

var file_authentication_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x13,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0c, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x49, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x4d, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xcc, 0x04, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f,
	0x0a, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x73, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x73, 0x6f, 0x49, 0x64, 0x12,
	0x40, 0x0a, 0x19, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x16, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4f, 0x6e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x46, 0x61, 0x69,
	0x6c, 0x12, 0x4c, 0x0a, 0x1f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x1c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3d, 0x0a, 0x17, 0x77, 0x65, 0x62, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x15, 0x77, 0x65, 0x62, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x16, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x57, 0x65, 0x62, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75,
	0x65, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x9d,
	0x03, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x67, 0x65, 0x6f, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x65, 0x6f, 0x69, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x33,
	0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x53, 0x4f, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x22, 0x50, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53,
	0x53, 0x4f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x73, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x73, 0x73, 0x6f, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x73, 0x6f, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x73, 0x6f, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x33, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x4c,
	0x6f, 0x67, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x65, 0x74, 0x61,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x63, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x11, 0x65, 0x74, 0x61, 0x44, 0x65, 0x76, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x22, 0x85, 0x02, 0x0a, 0x1b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x08, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x69,
	0x64, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x67, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x67, 0x72,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x61, 0x6e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x22, 0x4f, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6b, 0x69, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x69,
	0x0a, 0x17, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x73, 0x0a, 0x14, 0x4d, 0x65, 0x6d,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x2b,
	0x0a, 0x15, 0x4d, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x18, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x1a, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a,
	0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x0d,
	0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a,
	0x1d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x49, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x65,
	0x62, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x77, 0x65, 0x62, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x22, 0x46, 0x0a, 0x1b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x57, 0x65, 0x62,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x65, 0x62, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x77, 0x65, 0x62,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x32, 0x82, 0x09, 0x0a, 0x16,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x65, 0x0a, 0x0c, 0x4f, 0x6e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x31, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x22, 0x07, 0x80, 0xb5, 0x18, 0x01, 0x88, 0x02, 0x01, 0x12, 0x66, 0x0a,
	0x0f, 0x4f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x34, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x07, 0x80, 0xb5,
	0x18, 0x02, 0x88, 0x02, 0x01, 0x12, 0x70, 0x0a, 0x13, 0x4f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x12, 0x5f, 0x0a, 0x0f, 0x4f, 0x6e, 0x4c, 0x6f, 0x67,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x05, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x4f, 0x6e, 0x4d,
	0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x34, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x12,
	0x64, 0x0a, 0x0d, 0x4f, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x32, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x22,
	0x04, 0x80, 0xb5, 0x18, 0x0a, 0x12, 0x70, 0x0a, 0x14, 0x4f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x37, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x0b, 0x12, 0x6e, 0x0a, 0x12, 0x4f, 0x6e, 0x4c, 0x6f, 0x67,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x0c, 0x12, 0x48, 0x0a, 0x0f, 0x4f, 0x6e, 0x4c, 0x6f, 0x67,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x22, 0x04, 0x80, 0xb5, 0x18,
	0x0d, 0x12, 0x77, 0x0a, 0x15, 0x4f, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x22, 0x07, 0x80, 0xb5, 0x18, 0x0e, 0x88, 0x02, 0x01, 0x1a, 0x34, 0xca, 0x3e, 0x31, 0x62,
	0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x32, 0xcd, 0x07, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x12, 0x61, 0x0a,
	0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x32, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x07, 0x80, 0xb5, 0x18, 0x02, 0x88, 0x02, 0x01,
	0x12, 0x64, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x34, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x07, 0x80,
	0xb5, 0x18, 0x03, 0x88, 0x02, 0x01, 0x12, 0x55, 0x0a, 0x1c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x44, 0x45, 0x50, 0x52,
	0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x12, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x1a, 0x14,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x07, 0x80, 0xb5, 0x18, 0x04, 0x88, 0x02, 0x01, 0x12, 0x8b, 0x01,
	0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x53, 0x4f, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x37, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x53, 0x4f, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x53, 0x4f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x05, 0x12, 0x6c, 0x0a, 0x11, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x38, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x07, 0x80, 0xb5, 0x18, 0x06, 0x88, 0x02, 0x01, 0x12, 0x6f, 0x0a, 0x14, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x57, 0x65, 0x62, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x12, 0x3b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x57, 0x65, 0x62, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x07, 0x12, 0x9d, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x3d, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57,
	0x65, 0x62, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x62, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x08, 0x1a, 0x34, 0xca, 0x3e, 0x31, 0x62,
	0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x42, 0x36, 0x48, 0x01, 0x5a, 0x2f, 0x62, 0x6e, 0x65, 0x74, 0x2d, 0x6d, 0x6f, 0x63, 0x6b, 0x2f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x80, 0x01, 0x00,
}

var (
	file_authentication_service_proto_rawDescOnce sync.Once
	file_authentication_service_proto_rawDescData = file_authentication_service_proto_rawDesc
)

func file_authentication_service_proto_rawDescGZIP() []byte {
	file_authentication_service_proto_rawDescOnce.Do(func() {
		file_authentication_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_authentication_service_proto_rawDescData)
	})
	return file_authentication_service_proto_rawDescData
}

var file_authentication_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_authentication_service_proto_goTypes = []interface{}{
	(*ModuleLoadRequest)(nil),                  // 0: bgs.protocol.authentication.v1.ModuleLoadRequest
	(*ModuleNotification)(nil),                 // 1: bgs.protocol.authentication.v1.ModuleNotification
	(*ModuleMessageRequest)(nil),               // 2: bgs.protocol.authentication.v1.ModuleMessageRequest
	(*LogonRequest)(nil),                       // 3: bgs.protocol.authentication.v1.LogonRequest
	(*LogonResult)(nil),                        // 4: bgs.protocol.authentication.v1.LogonResult
	(*GenerateSSOTokenRequest)(nil),            // 5: bgs.protocol.authentication.v1.GenerateSSOTokenRequest
	(*GenerateSSOTokenResponse)(nil),           // 6: bgs.protocol.authentication.v1.GenerateSSOTokenResponse
	(*LogonUpdateRequest)(nil),                 // 7: bgs.protocol.authentication.v1.LogonUpdateRequest
	(*LogonQueueUpdateRequest)(nil),            // 8: bgs.protocol.authentication.v1.LogonQueueUpdateRequest
	(*AccountSettingsNotification)(nil),        // 9: bgs.protocol.authentication.v1.AccountSettingsNotification
	(*ServerStateChangeRequest)(nil),           // 10: bgs.protocol.authentication.v1.ServerStateChangeRequest
	(*VersionInfo)(nil),                        // 11: bgs.protocol.authentication.v1.VersionInfo
	(*VersionInfoNotification)(nil),            // 12: bgs.protocol.authentication.v1.VersionInfoNotification
	(*MemModuleLoadRequest)(nil),               // 13: bgs.protocol.authentication.v1.MemModuleLoadRequest
	(*MemModuleLoadResponse)(nil),              // 14: bgs.protocol.authentication.v1.MemModuleLoadResponse
	(*SelectGameAccountRequest)(nil),           // 15: bgs.protocol.authentication.v1.SelectGameAccountRequest
	(*GameAccountSelectedRequest)(nil),         // 16: bgs.protocol.authentication.v1.GameAccountSelectedRequest
	(*GenerateWebCredentialsRequest)(nil),      // 17: bgs.protocol.authentication.v1.GenerateWebCredentialsRequest
	(*GenerateWebCredentialsResponse)(nil),     // 18: bgs.protocol.authentication.v1.GenerateWebCredentialsResponse
	(*VerifyWebCredentialsRequest)(nil),        // 19: bgs.protocol.authentication.v1.VerifyWebCredentialsRequest
	(*content_handle_types.ContentHandle)(nil), // 20: bgs.protocol.ContentHandle
	(*entity_types.EntityId)(nil),              // 21: bgs.protocol.EntityId
	(*account_types.AccountLicense)(nil),       // 22: bgs.protocol.account.v1.AccountLicense
	(*rpc_types.NoData)(nil),                   // 23: bgs.protocol.NoData
	(*rpc_types.NO_RESPONSE)(nil),              // 24: bgs.protocol.NO_RESPONSE
}
var file_authentication_service_proto_depIdxs = []int32{
	20, // 0: bgs.protocol.authentication.v1.ModuleLoadRequest.module_handle:type_name -> bgs.protocol.ContentHandle
	21, // 1: bgs.protocol.authentication.v1.LogonResult.account_id:type_name -> bgs.protocol.EntityId
	21, // 2: bgs.protocol.authentication.v1.LogonResult.game_account_id:type_name -> bgs.protocol.EntityId
	22, // 3: bgs.protocol.authentication.v1.AccountSettingsNotification.licenses:type_name -> bgs.protocol.account.v1.AccountLicense
	11, // 4: bgs.protocol.authentication.v1.VersionInfoNotification.version_info:type_name -> bgs.protocol.authentication.v1.VersionInfo
	20, // 5: bgs.protocol.authentication.v1.MemModuleLoadRequest.handle:type_name -> bgs.protocol.ContentHandle
	21, // 6: bgs.protocol.authentication.v1.SelectGameAccountRequest.game_account_id:type_name -> bgs.protocol.EntityId
	21, // 7: bgs.protocol.authentication.v1.GameAccountSelectedRequest.game_account_id:type_name -> bgs.protocol.EntityId
	0,  // 8: bgs.protocol.authentication.v1.AuthenticationListener.OnModuleLoad:input_type -> bgs.protocol.authentication.v1.ModuleLoadRequest
	2,  // 9: bgs.protocol.authentication.v1.AuthenticationListener.OnModuleMessage:input_type -> bgs.protocol.authentication.v1.ModuleMessageRequest
	10, // 10: bgs.protocol.authentication.v1.AuthenticationListener.OnServerStateChange:input_type -> bgs.protocol.authentication.v1.ServerStateChangeRequest
	4,  // 11: bgs.protocol.authentication.v1.AuthenticationListener.OnLogonComplete:input_type -> bgs.protocol.authentication.v1.LogonResult
	13, // 12: bgs.protocol.authentication.v1.AuthenticationListener.OnMemModuleLoad:input_type -> bgs.protocol.authentication.v1.MemModuleLoadRequest
	7,  // 13: bgs.protocol.authentication.v1.AuthenticationListener.OnLogonUpdate:input_type -> bgs.protocol.authentication.v1.LogonUpdateRequest
	12, // 14: bgs.protocol.authentication.v1.AuthenticationListener.OnVersionInfoUpdated:input_type -> bgs.protocol.authentication.v1.VersionInfoNotification
	8,  // 15: bgs.protocol.authentication.v1.AuthenticationListener.OnLogonQueueUpdate:input_type -> bgs.protocol.authentication.v1.LogonQueueUpdateRequest
	23, // 16: bgs.protocol.authentication.v1.AuthenticationListener.OnLogonQueueEnd:input_type -> bgs.protocol.NoData
	16, // 17: bgs.protocol.authentication.v1.AuthenticationListener.OnGameAccountSelected:input_type -> bgs.protocol.authentication.v1.GameAccountSelectedRequest
	3,  // 18: bgs.protocol.authentication.v1.AuthenticationService.Logon:input_type -> bgs.protocol.authentication.v1.LogonRequest
	1,  // 19: bgs.protocol.authentication.v1.AuthenticationService.ModuleNotify:input_type -> bgs.protocol.authentication.v1.ModuleNotification
	2,  // 20: bgs.protocol.authentication.v1.AuthenticationService.ModuleMessage:input_type -> bgs.protocol.authentication.v1.ModuleMessageRequest
	21, // 21: bgs.protocol.authentication.v1.AuthenticationService.SelectGameAccount_DEPRECATED:input_type -> bgs.protocol.EntityId
	5,  // 22: bgs.protocol.authentication.v1.AuthenticationService.GenerateSSOToken:input_type -> bgs.protocol.authentication.v1.GenerateSSOTokenRequest
	15, // 23: bgs.protocol.authentication.v1.AuthenticationService.SelectGameAccount:input_type -> bgs.protocol.authentication.v1.SelectGameAccountRequest
	19, // 24: bgs.protocol.authentication.v1.AuthenticationService.VerifyWebCredentials:input_type -> bgs.protocol.authentication.v1.VerifyWebCredentialsRequest
	17, // 25: bgs.protocol.authentication.v1.AuthenticationService.GenerateWebCredentials:input_type -> bgs.protocol.authentication.v1.GenerateWebCredentialsRequest
	24, // 26: bgs.protocol.authentication.v1.AuthenticationListener.OnModuleLoad:output_type -> bgs.protocol.NO_RESPONSE
	23, // 27: bgs.protocol.authentication.v1.AuthenticationListener.OnModuleMessage:output_type -> bgs.protocol.NoData
	24, // 28: bgs.protocol.authentication.v1.AuthenticationListener.OnServerStateChange:output_type -> bgs.protocol.NO_RESPONSE
	24, // 29: bgs.protocol.authentication.v1.AuthenticationListener.OnLogonComplete:output_type -> bgs.protocol.NO_RESPONSE
	14, // 30: bgs.protocol.authentication.v1.AuthenticationListener.OnMemModuleLoad:output_type -> bgs.protocol.authentication.v1.MemModuleLoadResponse
	24, // 31: bgs.protocol.authentication.v1.AuthenticationListener.OnLogonUpdate:output_type -> bgs.protocol.NO_RESPONSE
	24, // 32: bgs.protocol.authentication.v1.AuthenticationListener.OnVersionInfoUpdated:output_type -> bgs.protocol.NO_RESPONSE
	24, // 33: bgs.protocol.authentication.v1.AuthenticationListener.OnLogonQueueUpdate:output_type -> bgs.protocol.NO_RESPONSE
	24, // 34: bgs.protocol.authentication.v1.AuthenticationListener.OnLogonQueueEnd:output_type -> bgs.protocol.NO_RESPONSE
	24, // 35: bgs.protocol.authentication.v1.AuthenticationListener.OnGameAccountSelected:output_type -> bgs.protocol.NO_RESPONSE
	23, // 36: bgs.protocol.authentication.v1.AuthenticationService.Logon:output_type -> bgs.protocol.NoData
	23, // 37: bgs.protocol.authentication.v1.AuthenticationService.ModuleNotify:output_type -> bgs.protocol.NoData
	23, // 38: bgs.protocol.authentication.v1.AuthenticationService.ModuleMessage:output_type -> bgs.protocol.NoData
	23, // 39: bgs.protocol.authentication.v1.AuthenticationService.SelectGameAccount_DEPRECATED:output_type -> bgs.protocol.NoData
	6,  // 40: bgs.protocol.authentication.v1.AuthenticationService.GenerateSSOToken:output_type -> bgs.protocol.authentication.v1.GenerateSSOTokenResponse
	23, // 41: bgs.protocol.authentication.v1.AuthenticationService.SelectGameAccount:output_type -> bgs.protocol.NoData
	23, // 42: bgs.protocol.authentication.v1.AuthenticationService.VerifyWebCredentials:output_type -> bgs.protocol.NoData
	18, // 43: bgs.protocol.authentication.v1.AuthenticationService.GenerateWebCredentials:output_type -> bgs.protocol.authentication.v1.GenerateWebCredentialsResponse
	26, // [26:44] is the sub-list for method output_type
	8,  // [8:26] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_authentication_service_proto_init() }
func file_authentication_service_proto_init() {
	if File_authentication_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authentication_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleLoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogonResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateSSOTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateSSOTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogonUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogonQueueUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSettingsNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerStateChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInfoNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemModuleLoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemModuleLoadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectGameAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountSelectedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateWebCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateWebCredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authentication_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyWebCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authentication_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_authentication_service_proto_goTypes,
		DependencyIndexes: file_authentication_service_proto_depIdxs,
		MessageInfos:      file_authentication_service_proto_msgTypes,
	}.Build()
	File_authentication_service_proto = out.File
	file_authentication_service_proto_rawDesc = nil
	file_authentication_service_proto_goTypes = nil
	file_authentication_service_proto_depIdxs = nil
}
